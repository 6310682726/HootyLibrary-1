# Generated by Django 4.1.2 on 2022-11-02 22:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('database_models', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='review',
            name='is_edited',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='review',
            name='last_edited',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='alias_name',
            field=models.CharField(blank=True, max_length=40),
        ),
        migrations.AlterField(
            model_name='book',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='book',
            name='book_id',
            field=models.TextField(max_length=10, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='book',
            name='date_created',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.RemoveField(
            model_name='book',
            name='genres',
        ),
        migrations.AlterField(
            model_name='book',
            name='pdf_files',
            field=models.FileField(blank=True, null=True, upload_to='book/<django.db.models.fields.TextField>/pdfs/'),
        ),
        migrations.AlterField(
            model_name='book',
            name='thumbnail',
            field=models.ImageField(blank=True, null=True, upload_to='book/<django.db.models.fields.TextField>/'),
        ),
        migrations.AlterField(
            model_name='issue',
            name='book_refer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database_models.book'),
        ),
        migrations.AlterField(
            model_name='report',
            name='book_refer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database_models.book'),
        ),
        migrations.AlterField(
            model_name='review',
            name='review_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='user',
            name='bio',
            field=models.TextField(blank=True, max_length=300, verbose_name='bio'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='profile_pic',
            field=models.ImageField(blank=True, null=True, upload_to='profile_pic/<django.db.models.fields.CharField>/'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_id',
            field=models.TextField(default=0, max_length=12, primary_key=True, serialize=False),
        ),
        migrations.CreateModel(
            name='Read',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_read_latest_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('book_refer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database_models.book')),
                ('user_refer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='genres',
            field=models.ManyToManyField(to='database_models.genre'),
        ),
    ]
